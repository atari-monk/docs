{
  "sections": [
    {
      "title": "Notes during coding",
      "chats": [
        {
          "question": "How to introduce animation to ball ?",
          "answer": "1. **Need to see how it was done in player**\n   - Player has class PlayerModel in client, it collects player data gathered from dtos send to client.\n   - Player has PlayerStateContext that handles states and rendering with animations\n\n2. **Things done for Ball**\n   - Ball also needs it's client model\n     * Model needs states BallState, BallStateType in shared-api lib, similar to players.\n   - Ball also needs it's StateContext class\n     * this class also needs IBallState similar to players\n       + changed IPlayerState to IState as it will be common with players and ball\n       + leaned against compiler to fix game and client packs with this rename\n     * this class also needs IdleState similar to players\n     * this class also needs BallRenderer similar to players\n   - Ball also needs animation data sililar to file playerData\n   - also Ball class needs to exist as a root of Ball class family inheritance just to handle it by name Ball\n\n3. **At this point client compiles again**\n   - Now there is a need to use added ball stuff in GameClient similar to how player is done\n   - Sprite is now showing in canvas :)\n\n4. **Script to handle config**\n    - I added script to turn of config that switches server to local (no longer shows i changes, till i turn it on again); it's committed as production value but locally it is now localhost and i wont accidentally commit it to repository since it is not in changes.",
          "dateTime": "2023-11-04T22:18:30.412Z"
        }
      ]
    }
  ]
}